jobs:
- job: ${{ format(parameters.name) }}
  pool:
    ${{ if eq(parameters.os, 'macosx') }}:
      vmImage: 'macOS-1015'
    ${{ if eq(parameters.os, 'linux32') }}:
      vmImage: ubuntu-latest
    ${{ if eq(parameters.os, 'linux64') }}:
      vmImage: ubuntu-latest
    ${{ if eq(parameters.os, 'windows32') }}:
      vmImage: windows-latest
    ${{ if eq(parameters.os, 'windows64') }}:
      vmImage: windows-latest
  strategy:
    matrix:
      regions:
        package: regions

  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'

  - script: pip install git+https://github.com/joerick/cibuildwheel
    displayName: Installing developer version of cibuildwheel

  - script: pip install git+https://github.com/larrybradley/autowheel.git
    displayName: Installing autowheel

  - script: mkdir wheelhouse
    displayName: Making wheelhouse directory

  - ${{ if eq(variables['Source.BranchName'], 'main') }}:

    - script: autowheel ${{ parameters.os }} --output-dir=wheelhouse --no-build-existing --package=$(package)
      displayName: Running autowheel
      ${{ if eq(parameters.os, 'macosx') }}:
        env:
          CC: clang

  - ${{ if ne(variables['Source.BranchName'], 'main') }}:

    - script: autowheel ${{ parameters.os }} --output-dir=wheelhouse --build-existing --package=$(package)
      displayName: Running autowheel
      ${{ if eq(parameters.os, 'macosx') }}:
        env:
          CC: clang

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: wheelhouse
      includeRootFolder: true
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/wheels_${{ parameters.os }}.tar.gz'

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: wheels-${{ parameters.os }}-$(package)
      targetPath: $(Build.ArtifactStagingDirectory)
